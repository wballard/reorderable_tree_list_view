{"protocolVersion":"0.1.1","runnerVersion":null,"pid":71884,"type":"start","time":0}
{"suite":{"id":0,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"suite","time":0}
{"test":{"id":1,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart","suiteID":0,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":0}
{"suite":{"id":2,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"suite","time":2}
{"test":{"id":3,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart","suiteID":2,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2}
{"suite":{"id":4,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"suite","time":2}
{"test":{"id":5,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart","suiteID":4,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2}
{"suite":{"id":6,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/reorderable_tree_list_view_test.dart"},"type":"suite","time":2}
{"test":{"id":7,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/reorderable_tree_list_view_test.dart","suiteID":6,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2}
{"suite":{"id":8,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"suite","time":2}
{"test":{"id":9,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart","suiteID":8,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2}
{"suite":{"id":10,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart"},"type":"suite","time":2}
{"test":{"id":11,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart","suiteID":10,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2}
{"suite":{"id":12,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"suite","time":2}
{"test":{"id":13,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart","suiteID":12,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":3}
{"suite":{"id":14,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"suite","time":3}
{"test":{"id":15,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart","suiteID":14,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":3}
{"count":16,"time":3,"type":"allSuites"}
{"testID":1,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1125}
{"group":{"id":16,"suiteID":0,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":16,"line":null,"column":null,"url":null},"type":"group","time":1126}
{"group":{"id":17,"suiteID":0,"parentID":16,"name":"DragDropHandler","metadata":{"skip":false,"skipReason":null},"testCount":16,"line":6,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"group","time":1126}
{"group":{"id":18,"suiteID":0,"parentID":17,"name":"DragDropHandler calculateNewPath","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":23,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"group","time":1126}
{"test":{"id":19,"name":"DragDropHandler calculateNewPath should move file to different folder","suiteID":0,"groupIDs":[16,17,18],"metadata":{"skip":false,"skipReason":null},"line":24,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1126}
{"testID":3,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1130}
{"group":{"id":20,"suiteID":2,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":11,"line":null,"column":null,"url":null},"type":"group","time":1130}
{"group":{"id":21,"suiteID":2,"parentID":20,"name":"TreeState","metadata":{"skip":false,"skipReason":null},"testCount":11,"line":7,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"group","time":1130}
{"test":{"id":22,"name":"TreeState provides access to all nodes","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":23,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1130}
{"testID":19,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1136}
{"test":{"id":23,"name":"DragDropHandler calculateNewPath should move file to root level","suiteID":0,"groupIDs":[16,17,18],"metadata":{"skip":false,"skipReason":null},"line":36,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1137}
{"testID":23,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1138}
{"test":{"id":24,"name":"DragDropHandler calculateNewPath should move folder to different parent","suiteID":0,"groupIDs":[16,17,18],"metadata":{"skip":false,"skipReason":null},"line":48,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1138}
{"testID":24,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1139}
{"test":{"id":25,"name":"DragDropHandler calculateNewPath should reorder within same parent","suiteID":0,"groupIDs":[16,17,18],"metadata":{"skip":false,"skipReason":null},"line":60,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1139}
{"testID":25,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1140}
{"test":{"id":26,"name":"DragDropHandler calculateNewPath should handle moving to end of list","suiteID":0,"groupIDs":[16,17,18],"metadata":{"skip":false,"skipReason":null},"line":72,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1140}
{"testID":26,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1141}
{"test":{"id":27,"name":"DragDropHandler calculateNewPath should handle drop into folder (as last child)","suiteID":0,"groupIDs":[16,17,18],"metadata":{"skip":false,"skipReason":null},"line":84,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1141}
{"testID":22,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1142}
{"test":{"id":28,"name":"TreeState provides quick lookup by path","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":29,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1142}
{"testID":27,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1143}
{"group":{"id":29,"suiteID":0,"parentID":17,"name":"DragDropHandler validateDrop","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":99,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"group","time":1143}
{"test":{"id":30,"name":"DragDropHandler validateDrop should allow valid file moves","suiteID":0,"groupIDs":[16,17,29],"metadata":{"skip":false,"skipReason":null},"line":100,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1143}
{"testID":28,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1145}
{"test":{"id":31,"name":"TreeState returns null for non-existent path","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":40,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1145}
{"testID":30,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1145}
{"test":{"id":32,"name":"DragDropHandler validateDrop should prevent moving folder into itself","suiteID":0,"groupIDs":[16,17,29],"metadata":{"skip":false,"skipReason":null},"line":112,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1145}
{"testID":32,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1146}
{"testID":31,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1146}
{"test":{"id":33,"name":"DragDropHandler validateDrop should prevent moving folder into its descendant","suiteID":0,"groupIDs":[16,17,29],"metadata":{"skip":false,"skipReason":null},"line":124,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1146}
{"test":{"id":34,"name":"TreeState gets children of a node","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":45,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1146}
{"testID":33,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1147}
{"test":{"id":35,"name":"DragDropHandler validateDrop should prevent duplicate names in same parent","suiteID":0,"groupIDs":[16,17,29],"metadata":{"skip":false,"skipReason":null},"line":136,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1148}
{"testID":35,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1149}
{"test":{"id":36,"name":"DragDropHandler validateDrop should allow moving to same parent (reordering)","suiteID":0,"groupIDs":[16,17,29],"metadata":{"skip":false,"skipReason":null},"line":154,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1149}
{"testID":36,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1150}
{"test":{"id":37,"name":"DragDropHandler validateDrop should handle root level drops","suiteID":0,"groupIDs":[16,17,29],"metadata":{"skip":false,"skipReason":null},"line":166,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1150}
{"testID":37,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1151}
{"group":{"id":38,"suiteID":0,"parentID":17,"name":"DragDropHandler getDropTarget","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":179,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"group","time":1151}
{"test":{"id":39,"name":"DragDropHandler getDropTarget should identify folder drop target","suiteID":0,"groupIDs":[16,17,38],"metadata":{"skip":false,"skipReason":null},"line":180,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1151}
{"testID":39,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1152}
{"test":{"id":40,"name":"DragDropHandler getDropTarget should identify parent from previous sibling","suiteID":0,"groupIDs":[16,17,38],"metadata":{"skip":false,"skipReason":null},"line":192,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1152}
{"testID":40,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1153}
{"test":{"id":41,"name":"DragDropHandler getDropTarget should handle drop at beginning","suiteID":0,"groupIDs":[16,17,38],"metadata":{"skip":false,"skipReason":null},"line":202,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1153}
{"testID":41,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1154}
{"test":{"id":42,"name":"DragDropHandler getDropTarget should handle drop at end","suiteID":0,"groupIDs":[16,17,38],"metadata":{"skip":false,"skipReason":null},"line":213,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/drag_drop_handler_test.dart"},"type":"testStart","time":1154}
{"testID":42,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1155}
{"testID":34,"error":"Expected: 'config.json'\n  Actual: 'data'\n   Which: is different.\n          Expected: config.jso ...\n            Actual: data\n                    ^\n           Differ at offset 0\n","stackTrace":"package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/core/tree_state_test.dart 53:7                 main.<fn>.<fn>\n","isFailure":true,"type":"error","time":1159}
{"testID":34,"result":"failure","skipped":false,"hidden":false,"type":"testDone","time":1160}
{"test":{"id":43,"name":"TreeState returns empty list for leaf nodes","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":57,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1160}
{"suite":{"id":44,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart"},"type":"suite","time":1162}
{"test":{"id":45,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart","suiteID":44,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":1162}
{"testID":43,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1162}
{"test":{"id":46,"name":"TreeState gets visible nodes (all expanded by default)","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":62,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1163}
{"testID":46,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1165}
{"test":{"id":47,"name":"TreeState tracks expansion state","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":67,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1165}
{"testID":47,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1166}
{"test":{"id":48,"name":"TreeState visible nodes respect expansion state","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":77,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1166}
{"testID":48,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1168}
{"test":{"id":49,"name":"TreeState collapseAll and expandAll work correctly","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":96,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1168}
{"testID":49,"error":"Expected: <1>\n  Actual: <3>\n","stackTrace":"package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/core/tree_state_test.dart 101:7                main.<fn>.<fn>\n","isFailure":true,"type":"error","time":1171}
{"testID":49,"result":"failure","skipped":false,"hidden":false,"type":"testDone","time":1172}
{"test":{"id":50,"name":"TreeState handles expansion state for non-folder nodes gracefully","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":110,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1172}
{"testID":50,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1173}
{"test":{"id":51,"name":"TreeState preserves sort order in visible nodes","suiteID":2,"groupIDs":[20,21],"metadata":{"skip":false,"skipReason":null},"line":120,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_state_test.dart"},"type":"testStart","time":1173}
{"testID":51,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1175}
{"suite":{"id":52,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"suite","time":1180}
{"test":{"id":53,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart","suiteID":52,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":1180}
{"testID":5,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1258}
{"group":{"id":54,"suiteID":4,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":null,"column":null,"url":null},"type":"group","time":1258}
{"group":{"id":55,"suiteID":4,"parentID":54,"name":"TreeBuilder","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":6,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"group","time":1258}
{"test":{"id":56,"name":"TreeBuilder builds tree from simple paths","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":7,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1258}
{"testID":56,"error":"Expected: Uri:<file://var/config.json>\n  Actual: Uri:<file://var/data>\n","stackTrace":"package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/core/tree_builder_test.dart 30:7               main.<fn>.<fn>\n","isFailure":true,"type":"error","time":1275}
{"testID":56,"result":"failure","skipped":false,"hidden":false,"type":"testDone","time":1275}
{"test":{"id":57,"name":"TreeBuilder handles empty path list","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":40,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1275}
{"testID":57,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1276}
{"test":{"id":58,"name":"TreeBuilder handles duplicate paths","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":47,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1276}
{"testID":58,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1277}
{"test":{"id":59,"name":"TreeBuilder handles multiple schemes","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":60,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1277}
{"testID":59,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1279}
{"test":{"id":60,"name":"TreeBuilder maintains hierarchical order","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":74,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1279}
{"testID":60,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1281}
{"test":{"id":61,"name":"TreeBuilder sorts siblings alphabetically","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":97,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1281}
{"testID":61,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1282}
{"test":{"id":62,"name":"TreeBuilder handles deep nesting efficiently","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":114,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1282}
{"testID":62,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1285}
{"test":{"id":63,"name":"TreeBuilder handles URIs with special characters","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":135,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1285}
{"testID":63,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1286}
{"test":{"id":64,"name":"TreeBuilder performance with large path lists","suiteID":4,"groupIDs":[54,55],"metadata":{"skip":false,"skipReason":null},"line":150,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/core/tree_builder_test.dart"},"type":"testStart","time":1287}
{"testID":64,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1342}
{"suite":{"id":65,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"suite","time":1347}
{"test":{"id":66,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart","suiteID":65,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":1347}
{"testID":7,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1396}
{"group":{"id":67,"suiteID":6,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":null,"column":null,"url":null},"type":"group","time":1396}
{"group":{"id":68,"suiteID":6,"parentID":67,"name":"ReorderableTreeListView","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":4,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/reorderable_tree_list_view_test.dart"},"type":"group","time":1396}
{"test":{"id":69,"name":"ReorderableTreeListView package can be imported","suiteID":6,"groupIDs":[67,68],"metadata":{"skip":false,"skipReason":null},"line":5,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/reorderable_tree_list_view_test.dart"},"type":"testStart","time":1396}
{"testID":69,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1405}
{"suite":{"id":70,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"suite","time":1409}
{"test":{"id":71,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart","suiteID":70,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":1409}
{"testID":9,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1568}
{"group":{"id":72,"suiteID":8,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":18,"line":null,"column":null,"url":null},"type":"group","time":1568}
{"group":{"id":73,"suiteID":8,"parentID":72,"name":"TreePath","metadata":{"skip":false,"skipReason":null},"testCount":18,"line":5,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"group","time":1568}
{"group":{"id":74,"suiteID":8,"parentID":73,"name":"TreePath generateIntermediatePaths","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":6,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"group","time":1568}
{"test":{"id":75,"name":"TreePath generateIntermediatePaths generates all parent paths for a deep path","suiteID":8,"groupIDs":[72,73,74],"metadata":{"skip":false,"skipReason":null},"line":7,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1568}
{"testID":75,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1577}
{"test":{"id":76,"name":"TreePath generateIntermediatePaths returns empty list for root path","suiteID":8,"groupIDs":[72,73,74],"metadata":{"skip":false,"skipReason":null},"line":18,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1577}
{"testID":76,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1578}
{"test":{"id":77,"name":"TreePath generateIntermediatePaths generates correct paths for single segment","suiteID":8,"groupIDs":[72,73,74],"metadata":{"skip":false,"skipReason":null},"line":25,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1578}
{"testID":77,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1579}
{"test":{"id":78,"name":"TreePath generateIntermediatePaths handles different URI schemes","suiteID":8,"groupIDs":[72,73,74],"metadata":{"skip":false,"skipReason":null},"line":34,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1579}
{"testID":78,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1580}
{"group":{"id":79,"suiteID":8,"parentID":73,"name":"TreePath calculateDepth","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":46,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"group","time":1580}
{"test":{"id":80,"name":"TreePath calculateDepth calculates depth for various paths","suiteID":8,"groupIDs":[72,73,79],"metadata":{"skip":false,"skipReason":null},"line":47,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1580}
{"testID":80,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1581}
{"test":{"id":81,"name":"TreePath calculateDepth handles paths with empty segments","suiteID":8,"groupIDs":[72,73,79],"metadata":{"skip":false,"skipReason":null},"line":54,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1581}
{"testID":81,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1582}
{"group":{"id":82,"suiteID":8,"parentID":73,"name":"TreePath getDisplayName","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":60,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"group","time":1582}
{"test":{"id":83,"name":"TreePath getDisplayName returns scheme for root paths","suiteID":8,"groupIDs":[72,73,82],"metadata":{"skip":false,"skipReason":null},"line":61,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1582}
{"testID":83,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1583}
{"test":{"id":84,"name":"TreePath getDisplayName returns last segment for non-root paths","suiteID":8,"groupIDs":[72,73,82],"metadata":{"skip":false,"skipReason":null},"line":67,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1583}
{"testID":84,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1584}
{"test":{"id":85,"name":"TreePath getDisplayName handles trailing slashes","suiteID":8,"groupIDs":[72,73,82],"metadata":{"skip":false,"skipReason":null},"line":73,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1584}
{"testID":85,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1585}
{"test":{"id":86,"name":"TreePath getDisplayName handles special characters in names","suiteID":8,"groupIDs":[72,73,82],"metadata":{"skip":false,"skipReason":null},"line":78,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1585}
{"testID":86,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1587}
{"group":{"id":87,"suiteID":8,"parentID":73,"name":"TreePath getParentPath","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":84,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"group","time":1587}
{"test":{"id":88,"name":"TreePath getParentPath returns null for root paths","suiteID":8,"groupIDs":[72,73,87],"metadata":{"skip":false,"skipReason":null},"line":85,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1587}
{"testID":88,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1588}
{"test":{"id":89,"name":"TreePath getParentPath returns parent for non-root paths","suiteID":8,"groupIDs":[72,73,87],"metadata":{"skip":false,"skipReason":null},"line":90,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1588}
{"testID":89,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1589}
{"test":{"id":90,"name":"TreePath getParentPath handles trailing slashes","suiteID":8,"groupIDs":[72,73,87],"metadata":{"skip":false,"skipReason":null},"line":96,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1589}
{"testID":90,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1590}
{"group":{"id":91,"suiteID":8,"parentID":73,"name":"TreePath isAncestorOf","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":102,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"group","time":1590}
{"test":{"id":92,"name":"TreePath isAncestorOf returns true for direct ancestors","suiteID":8,"groupIDs":[72,73,91],"metadata":{"skip":false,"skipReason":null},"line":103,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1590}
{"testID":92,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1591}
{"test":{"id":93,"name":"TreePath isAncestorOf returns true for indirect ancestors","suiteID":8,"groupIDs":[72,73,91],"metadata":{"skip":false,"skipReason":null},"line":120,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1591}
{"testID":93,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1592}
{"test":{"id":94,"name":"TreePath isAncestorOf returns false for non-ancestors","suiteID":8,"groupIDs":[72,73,91],"metadata":{"skip":false,"skipReason":null},"line":132,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1592}
{"testID":94,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1593}
{"test":{"id":95,"name":"TreePath isAncestorOf returns false for same paths","suiteID":8,"groupIDs":[72,73,91],"metadata":{"skip":false,"skipReason":null},"line":149,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1593}
{"testID":95,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1594}
{"test":{"id":96,"name":"TreePath isAncestorOf returns false for different schemes","suiteID":8,"groupIDs":[72,73,91],"metadata":{"skip":false,"skipReason":null},"line":156,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_path_test.dart"},"type":"testStart","time":1594}
{"testID":96,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1595}
{"suite":{"id":97,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"suite","time":1599}
{"test":{"id":98,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart","suiteID":97,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":1599}
{"testID":11,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1693}
{"group":{"id":99,"suiteID":10,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":null,"column":null,"url":null},"type":"group","time":1693}
{"group":{"id":100,"suiteID":10,"parentID":99,"name":"TreeNode","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":5,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart"},"type":"group","time":1693}
{"test":{"id":101,"name":"TreeNode creates node with all properties","suiteID":10,"groupIDs":[99,100],"metadata":{"skip":false,"skipReason":null},"line":6,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart"},"type":"testStart","time":1693}
{"testID":101,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1703}
{"test":{"id":102,"name":"TreeNode calculates depth correctly for various paths","suiteID":10,"groupIDs":[99,100],"metadata":{"skip":false,"skipReason":null},"line":21,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart"},"type":"testStart","time":1703}
{"testID":102,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1704}
{"test":{"id":103,"name":"TreeNode gets display name correctly","suiteID":10,"groupIDs":[99,100],"metadata":{"skip":false,"skipReason":null},"line":47,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart"},"type":"testStart","time":1704}
{"testID":103,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1705}
{"test":{"id":104,"name":"TreeNode gets parent path correctly","suiteID":10,"groupIDs":[99,100],"metadata":{"skip":false,"skipReason":null},"line":67,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart"},"type":"testStart","time":1705}
{"testID":104,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1707}
{"test":{"id":105,"name":"TreeNode handles different URI schemes","suiteID":10,"groupIDs":[99,100],"metadata":{"skip":false,"skipReason":null},"line":87,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart"},"type":"testStart","time":1707}
{"testID":105,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1708}
{"test":{"id":106,"name":"TreeNode equality and hashCode work correctly","suiteID":10,"groupIDs":[99,100],"metadata":{"skip":false,"skipReason":null},"line":104,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/models/tree_node_test.dart"},"type":"testStart","time":1708}
{"testID":106,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1709}
{"suite":{"id":107,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"suite","time":1714}
{"test":{"id":108,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart","suiteID":107,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":1714}
{"testID":13,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1860}
{"group":{"id":109,"suiteID":12,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":10,"line":null,"column":null,"url":null},"type":"group","time":1860}
{"group":{"id":110,"suiteID":12,"parentID":109,"name":"TreeTheme","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":6,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"group","time":1860}
{"test":{"id":111,"name":"TreeTheme should create with default values","suiteID":12,"groupIDs":[109,110],"metadata":{"skip":false,"skipReason":null},"line":7,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":1860}
{"testID":111,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1872}
{"test":{"id":112,"name":"TreeTheme should create with custom values","suiteID":12,"groupIDs":[109,110],"metadata":{"skip":false,"skipReason":null},"line":23,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":1872}
{"testID":112,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1874}
{"test":{"id":113,"name":"TreeTheme should support equality","suiteID":12,"groupIDs":[109,110],"metadata":{"skip":false,"skipReason":null},"line":51,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":1875}
{"testID":113,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1876}
{"test":{"id":114,"name":"TreeTheme should have correct hashCode","suiteID":12,"groupIDs":[109,110],"metadata":{"skip":false,"skipReason":null},"line":60,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":1876}
{"testID":114,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1878}
{"test":{"id":115,"name":"TreeTheme should copyWith correctly","suiteID":12,"groupIDs":[109,110],"metadata":{"skip":false,"skipReason":null},"line":69,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":1878}
{"testID":115,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":1879}
{"test":{"id":116,"name":"TreeTheme should be accessible via InheritedWidget","suiteID":12,"groupIDs":[109,110],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":82,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":1879}
{"testID":15,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2010}
{"group":{"id":117,"suiteID":14,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":12,"line":null,"column":null,"url":null},"type":"group","time":2010}
{"group":{"id":118,"suiteID":14,"parentID":117,"name":"TreeState Expansion","metadata":{"skip":false,"skipReason":null},"testCount":12,"line":5,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"group","time":2010}
{"group":{"id":119,"suiteID":14,"parentID":118,"name":"TreeState Expansion expandedPaths tracking","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":20,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"group","time":2010}
{"test":{"id":120,"name":"TreeState Expansion expandedPaths tracking should initialize with expanded folders by default","suiteID":14,"groupIDs":[117,118,119],"metadata":{"skip":false,"skipReason":null},"line":21,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2010}
{"testID":120,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2022}
{"test":{"id":121,"name":"TreeState Expansion expandedPaths tracking should track expanded paths when toggling","suiteID":14,"groupIDs":[117,118,119],"metadata":{"skip":false,"skipReason":null},"line":28,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2022}
{"testID":121,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2024}
{"test":{"id":122,"name":"TreeState Expansion expandedPaths tracking should handle multiple expanded paths","suiteID":14,"groupIDs":[117,118,119],"metadata":{"skip":false,"skipReason":null},"line":42,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2024}
{"testID":122,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2026}
{"group":{"id":123,"suiteID":14,"parentID":118,"name":"TreeState Expansion isExpanded","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":55,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"group","time":2026}
{"test":{"id":124,"name":"TreeState Expansion isExpanded should return true for expanded nodes by default","suiteID":14,"groupIDs":[117,118,123],"metadata":{"skip":false,"skipReason":null},"line":56,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2026}
{"testID":124,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2027}
{"test":{"id":125,"name":"TreeState Expansion isExpanded should return false for collapsed nodes","suiteID":14,"groupIDs":[117,118,123],"metadata":{"skip":false,"skipReason":null},"line":60,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2028}
{"testID":125,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2029}
{"test":{"id":126,"name":"TreeState Expansion isExpanded should handle non-existent paths","suiteID":14,"groupIDs":[117,118,123],"metadata":{"skip":false,"skipReason":null},"line":66,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2029}
{"testID":126,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2030}
{"group":{"id":127,"suiteID":14,"parentID":118,"name":"TreeState Expansion expandAll","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":71,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"group","time":2030}
{"test":{"id":128,"name":"TreeState Expansion expandAll should expand all nodes with children","suiteID":14,"groupIDs":[117,118,127],"metadata":{"skip":false,"skipReason":null},"line":72,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2030}
{"testID":128,"error":"Expected: empty\n  Actual: Set:[Uri:file:///]\n","stackTrace":"package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/tree_state_expansion_test.dart 75:9            main.<fn>.<fn>.<fn>\n","isFailure":true,"type":"error","time":2037}
{"testID":128,"result":"failure","skipped":false,"hidden":false,"type":"testDone","time":2038}
{"group":{"id":129,"suiteID":14,"parentID":118,"name":"TreeState Expansion collapseAll","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":88,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"group","time":2038}
{"test":{"id":130,"name":"TreeState Expansion collapseAll should collapse all nodes","suiteID":14,"groupIDs":[117,118,129],"metadata":{"skip":false,"skipReason":null},"line":89,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2038}
{"testID":130,"error":"Expected: empty\n  Actual: Set:[Uri:file:///]\n","stackTrace":"package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/tree_state_expansion_test.dart 92:9            main.<fn>.<fn>.<fn>\n","isFailure":true,"type":"error","time":2040}
{"testID":130,"result":"failure","skipped":false,"hidden":false,"type":"testDone","time":2040}
{"group":{"id":131,"suiteID":14,"parentID":118,"name":"TreeState Expansion getVisibleNodes","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":98,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"group","time":2040}
{"test":{"id":132,"name":"TreeState Expansion getVisibleNodes should return only root when all collapsed","suiteID":14,"groupIDs":[117,118,131],"metadata":{"skip":false,"skipReason":null},"line":99,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2040}
{"testID":132,"error":"Expected: <1>\n  Actual: <2>\n","stackTrace":"package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/tree_state_expansion_test.dart 102:9           main.<fn>.<fn>.<fn>\n","isFailure":true,"type":"error","time":2044}
{"testID":132,"result":"failure","skipped":false,"hidden":false,"type":"testDone","time":2044}
{"test":{"id":133,"name":"TreeState Expansion getVisibleNodes should include direct children when root is expanded","suiteID":14,"groupIDs":[117,118,131],"metadata":{"skip":false,"skipReason":null},"line":106,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2044}
{"testID":133,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2046}
{"test":{"id":134,"name":"TreeState Expansion getVisibleNodes should include grandchildren when multiple levels expanded","suiteID":14,"groupIDs":[117,118,131],"metadata":{"skip":false,"skipReason":null},"line":117,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2046}
{"testID":134,"error":"Expected: 'child2'\n  Actual: 'grandchild1'\n   Which: is different.\n          Expected: child2\n            Actual: grandchild ...\n                    ^\n           Differ at offset 0\n","stackTrace":"package:matcher                                     expect\npackage:flutter_test/src/widget_tester.dart 474:18  expect\ntest/tree_state_expansion_test.dart 129:9           main.<fn>.<fn>.<fn>\n","isFailure":true,"type":"error","time":2050}
{"testID":134,"result":"failure","skipped":false,"hidden":false,"type":"testDone","time":2051}
{"test":{"id":135,"name":"TreeState Expansion getVisibleNodes should update visibility after collapse","suiteID":14,"groupIDs":[117,118,131],"metadata":{"skip":false,"skipReason":null},"line":134,"column":7,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/tree_state_expansion_test.dart"},"type":"testStart","time":2051}
{"testID":135,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2052}
{"suite":{"id":136,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"suite","time":2057}
{"test":{"id":137,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart","suiteID":136,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2057}
{"testID":116,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2098}
{"test":{"id":138,"name":"TreeTheme should use default theme when not provided","suiteID":12,"groupIDs":[109,110],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":103,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":2099}
{"testID":138,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2110}
{"test":{"id":139,"name":"TreeTheme should merge with Material theme","suiteID":12,"groupIDs":[109,110],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":120,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":2111}
{"testID":139,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2119}
{"group":{"id":140,"suiteID":12,"parentID":109,"name":"TreeThemeData","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":148,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"group","time":2119}
{"test":{"id":141,"name":"TreeThemeData should provide theme to descendants","suiteID":12,"groupIDs":[109,140],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":149,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":2119}
{"testID":141,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2129}
{"test":{"id":142,"name":"TreeThemeData should update when theme changes","suiteID":12,"groupIDs":[109,140],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":170,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/theme/tree_theme_test.dart"},"type":"testStart","time":2129}
{"testID":142,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2147}
{"testID":45,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2152}
{"group":{"id":143,"suiteID":44,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":null,"column":null,"url":null},"type":"group","time":2152}
{"group":{"id":144,"suiteID":44,"parentID":143,"name":"ReorderableTreeListView Drag and Drop","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":8,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart"},"type":"group","time":2152}
{"test":{"id":145,"name":"ReorderableTreeListView Drag and Drop should call onReorder when item is moved","suiteID":44,"groupIDs":[143,144],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":43,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart"},"type":"testStart","time":2152}
{"suite":{"id":146,"platform":"vm","path":"/Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"suite","time":2154}
{"test":{"id":147,"name":"loading /Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart","suiteID":146,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2154}
{"testID":53,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2313}
{"group":{"id":148,"suiteID":52,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":7,"line":null,"column":null,"url":null},"type":"group","time":2313}
{"group":{"id":149,"suiteID":52,"parentID":148,"name":"ReorderableTreeListView Expansion Integration","metadata":{"skip":false,"skipReason":null},"testCount":7,"line":6,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"group","time":2313}
{"group":{"id":150,"suiteID":52,"parentID":149,"name":"ReorderableTreeListView Expansion Integration initialization","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":18,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"group","time":2313}
{"test":{"id":151,"name":"ReorderableTreeListView Expansion Integration initialization should expand all folders by default","suiteID":52,"groupIDs":[148,149,150],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":19,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"testStart","time":2313}
{"testID":66,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2449}
{"group":{"id":152,"suiteID":65,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":null,"column":null,"url":null},"type":"group","time":2449}
{"group":{"id":153,"suiteID":65,"parentID":152,"name":"ReorderableTreeListView Integration","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":6,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"group","time":2449}
{"test":{"id":154,"name":"ReorderableTreeListView Integration uses ReorderableListView instead of ListView","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":18,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":2449}
{"testID":145,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2583}
{"test":{"id":155,"name":"ReorderableTreeListView Drag and Drop should call onDragStart when drag begins","suiteID":44,"groupIDs":[143,144],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":79,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart"},"type":"testStart","time":2584}
{"testID":71,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2601}
{"group":{"id":156,"suiteID":70,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":7,"line":null,"column":null,"url":null},"type":"group","time":2601}
{"group":{"id":157,"suiteID":70,"parentID":156,"name":"ReorderableTreeListView","metadata":{"skip":false,"skipReason":null},"testCount":7,"line":6,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"group","time":2601}
{"test":{"id":158,"name":"ReorderableTreeListView creates widget with sample paths","suiteID":70,"groupIDs":[156,157],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":18,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"testStart","time":2601}
{"testID":155,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2647}
{"test":{"id":159,"name":"ReorderableTreeListView Drag and Drop should call onDragEnd when drag ends","suiteID":44,"groupIDs":[143,144],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":103,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart"},"type":"testStart","time":2647}
{"testID":151,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2668}
{"test":{"id":160,"name":"ReorderableTreeListView Expansion Integration initialization should collapse all folders when expandedByDefault is false","suiteID":52,"groupIDs":[148,149,150],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":40,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"testStart","time":2668}
{"testID":160,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2690}
{"test":{"id":161,"name":"ReorderableTreeListView Expansion Integration initialization should respect initiallyExpanded parameter","suiteID":52,"groupIDs":[148,149,150],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":58,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"testStart","time":2690}
{"testID":159,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2709}
{"test":{"id":162,"name":"ReorderableTreeListView Drag and Drop should respect onWillAcceptDrop validation","suiteID":44,"groupIDs":[143,144],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":126,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart"},"type":"testStart","time":2709}
{"testID":161,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2722}
{"group":{"id":163,"suiteID":52,"parentID":149,"name":"ReorderableTreeListView Expansion Integration interaction","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":84,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"group","time":2722}
{"test":{"id":164,"name":"ReorderableTreeListView Expansion Integration interaction should toggle expansion when icon is tapped","suiteID":52,"groupIDs":[148,149,163],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":85,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"testStart","time":2722}
{"testID":98,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2752}
{"group":{"id":165,"suiteID":97,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":null,"column":null,"url":null},"type":"group","time":2752}
{"group":{"id":166,"suiteID":97,"parentID":165,"name":"ReorderableTreeListViewItem Expansion UI","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":7,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"group","time":2752}
{"group":{"id":167,"suiteID":97,"parentID":166,"name":"ReorderableTreeListViewItem Expansion UI expand/collapse icons","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":21,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"group","time":2753}
{"test":{"id":168,"name":"ReorderableTreeListViewItem Expansion UI expand/collapse icons should show expand icon for collapsed folder","suiteID":97,"groupIDs":[165,166,167],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":22,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"testStart","time":2753}
{"testID":162,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2780}
{"test":{"id":169,"name":"ReorderableTreeListView Drag and Drop should apply custom proxyDecorator during drag","suiteID":44,"groupIDs":[143,144],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":162,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart"},"type":"testStart","time":2781}
{"testID":164,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2834}
{"test":{"id":170,"name":"ReorderableTreeListView Expansion Integration interaction should expand collapsed folder when icon is tapped","suiteID":52,"groupIDs":[148,149,163],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":128,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"testStart","time":2834}
{"testID":169,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2840}
{"test":{"id":171,"name":"ReorderableTreeListView Drag and Drop should handle complex tree reorganization","suiteID":44,"groupIDs":[143,144],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":202,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart"},"type":"testStart","time":2840}
{"testID":154,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2843}
{"test":{"id":172,"name":"ReorderableTreeListView Integration renders all tree nodes with proper keys","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":37,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":2843}
{"testID":170,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2883}
{"group":{"id":173,"suiteID":52,"parentID":149,"name":"ReorderableTreeListView Expansion Integration edge cases","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":172,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"group","time":2883}
{"test":{"id":174,"name":"ReorderableTreeListView Expansion Integration edge cases should handle empty paths list","suiteID":52,"groupIDs":[148,149,173],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":173,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"testStart","time":2883}
{"testID":174,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2895}
{"test":{"id":175,"name":"ReorderableTreeListView Expansion Integration edge cases should handle paths with no common parent","suiteID":52,"groupIDs":[148,149,173],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":187,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_expansion_test.dart"},"type":"testStart","time":2895}
{"testID":172,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2897}
{"test":{"id":176,"name":"ReorderableTreeListView Integration each item has unique ValueKey based on node key","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":58,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":2897}
{"testID":175,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2924}
{"testID":108,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2931}
{"group":{"id":177,"suiteID":107,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":11,"line":null,"column":null,"url":null},"type":"group","time":2931}
{"group":{"id":178,"suiteID":107,"parentID":177,"name":"ReorderableTreeListViewItem","metadata":{"skip":false,"skipReason":null},"testCount":11,"line":6,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"group","time":2931}
{"test":{"id":179,"name":"ReorderableTreeListViewItem creates widget with required parameters","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":18,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":2931}
{"testID":176,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2946}
{"test":{"id":180,"name":"ReorderableTreeListView Integration passes through scroll controller","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":87,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":2946}
{"testID":180,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2987}
{"test":{"id":181,"name":"ReorderableTreeListView Integration passes through padding and other properties","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":115,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":2988}
{"testID":158,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3004}
{"test":{"id":182,"name":"ReorderableTreeListView shows all paths in temporary ListView","suiteID":70,"groupIDs":[156,157],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":43,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"testStart","time":3004}
{"testID":181,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3031}
{"test":{"id":183,"name":"ReorderableTreeListView Integration has onReorder callback defined","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":140,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":3031}
{"testID":171,"messageType":"print","message":"══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════\nThe following TestFailure was thrown running a test:\nExpected: contains 'projectb'\n  Actual: 'file://helpers.dart/'\n   Which: does not contain 'projectb'\n\nWhen the exception was thrown, this was the stack:\n#4      main.<anonymous closure>.<anonymous closure> (file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart:244:7)\n<asynchronous suspension>\n#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)\n<asynchronous suspension>\n#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)\n<asynchronous suspension>\n<asynchronous suspension>\n(elided one frame from package:stack_trace)\n\nThis was caught by the test expectation on the following line:\n  file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_drag_drop_test.dart line 244\nThe test description was:\n  should handle complex tree reorganization\n════════════════════════════════════════════════════════════════════════════════════════════════════","type":"print","time":3047}
{"testID":171,"error":"Test failed. See exception logs above.\nThe test description was: should handle complex tree reorganization","stackTrace":"","isFailure":false,"type":"error","time":3048}
{"testID":171,"result":"error","skipped":false,"hidden":false,"type":"testDone","time":3048}
{"testID":182,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3058}
{"test":{"id":184,"name":"ReorderableTreeListView uses custom folder builder when provided","suiteID":70,"groupIDs":[156,157],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":63,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"testStart","time":3058}
{"testID":168,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3058}
{"test":{"id":185,"name":"ReorderableTreeListViewItem Expansion UI expand/collapse icons should show collapse icon for expanded folder","suiteID":97,"groupIDs":[165,166,167],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":46,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"testStart","time":3059}
{"testID":183,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3076}
{"test":{"id":186,"name":"ReorderableTreeListView Integration configures drag handles for desktop platforms","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":161,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":3076}
{"testID":185,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3077}
{"test":{"id":187,"name":"ReorderableTreeListViewItem Expansion UI expand/collapse icons should not show expansion icon for leaf nodes","suiteID":97,"groupIDs":[165,166,167],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":69,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"testStart","time":3077}
{"testID":187,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3092}
{"group":{"id":188,"suiteID":97,"parentID":166,"name":"ReorderableTreeListViewItem Expansion UI expansion interaction","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":91,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"group","time":3092}
{"test":{"id":189,"name":"ReorderableTreeListViewItem Expansion UI expansion interaction should call onExpansionToggle when expansion icon is tapped","suiteID":97,"groupIDs":[165,166,188],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":92,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"testStart","time":3092}
{"testID":137,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":3101}
{"group":{"id":190,"suiteID":136,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":16,"line":null,"column":null,"url":null},"type":"group","time":3101}
{"group":{"id":191,"suiteID":136,"parentID":190,"name":"ReorderableTreeListView Keyboard Navigation","metadata":{"skip":false,"skipReason":null},"testCount":16,"line":7,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"group","time":3101}
{"group":{"id":192,"suiteID":136,"parentID":191,"name":"ReorderableTreeListView Keyboard Navigation Focus Management","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":42,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"group","time":3101}
{"test":{"id":193,"name":"ReorderableTreeListView Keyboard Navigation Focus Management should focus first item on initial tab","suiteID":136,"groupIDs":[190,191,192],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":43,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3101}
{"testID":184,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3108}
{"test":{"id":194,"name":"ReorderableTreeListView handles empty path list","suiteID":70,"groupIDs":[156,157],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":85,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"testStart","time":3108}
{"testID":186,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3116}
{"test":{"id":195,"name":"ReorderableTreeListView Integration items are draggable","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":182,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":3117}
{"testID":194,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3121}
{"test":{"id":196,"name":"ReorderableTreeListView rebuilds when paths change","suiteID":70,"groupIDs":[156,157],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":103,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"testStart","time":3121}
{"testID":189,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3146}
{"test":{"id":197,"name":"ReorderableTreeListViewItem Expansion UI expansion interaction should not interfere with drag operations","suiteID":97,"groupIDs":[165,166,188],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":119,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"testStart","time":3146}
{"testID":197,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3164}
{"group":{"id":198,"suiteID":97,"parentID":166,"name":"ReorderableTreeListViewItem Expansion UI accessibility","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":146,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"group","time":3164}
{"test":{"id":199,"name":"ReorderableTreeListViewItem Expansion UI accessibility should have proper semantics for expansion state","suiteID":97,"groupIDs":[165,166,198],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":147,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/tree_item_expansion_test.dart"},"type":"testStart","time":3164}
{"testID":199,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3178}
{"testID":147,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":3197}
{"group":{"id":200,"suiteID":146,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":null,"column":null,"url":null},"type":"group","time":3198}
{"group":{"id":201,"suiteID":146,"parentID":200,"name":"ReorderableTreeListViewItem Theme Integration","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":6,"column":3,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"group","time":3198}
{"test":{"id":202,"name":"ReorderableTreeListViewItem Theme Integration should use default theme when no TreeTheme provided","suiteID":146,"groupIDs":[200,201],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":7,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"testStart","time":3198}
{"testID":195,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3211}
{"test":{"id":203,"name":"ReorderableTreeListView Integration rebuilds when paths change","suiteID":65,"groupIDs":[152,153],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":220,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_integration_test.dart"},"type":"testStart","time":3211}
{"testID":196,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3214}
{"test":{"id":204,"name":"ReorderableTreeListView accepts scroll controller","suiteID":70,"groupIDs":[156,157],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":150,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"testStart","time":3214}
{"testID":179,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3215}
{"test":{"id":205,"name":"ReorderableTreeListViewItem applies correct indentation based on depth","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":34,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3215}
{"testID":205,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3233}
{"test":{"id":206,"name":"ReorderableTreeListViewItem applies correct indentation for nested nodes","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":60,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3233}
{"testID":206,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3246}
{"test":{"id":207,"name":"ReorderableTreeListViewItem uses custom indent width","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":83,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3246}
{"testID":204,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3254}
{"test":{"id":208,"name":"ReorderableTreeListView applies padding","suiteID":70,"groupIDs":[156,157],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":173,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_test.dart"},"type":"testStart","time":3254}
{"testID":207,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3259}
{"test":{"id":209,"name":"ReorderableTreeListViewItem child is properly wrapped in Expanded","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":103,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3259}
{"testID":209,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3274}
{"test":{"id":210,"name":"ReorderableTreeListViewItem uses Row layout","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":127,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3275}
{"testID":203,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3275}
{"testID":210,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3286}
{"test":{"id":211,"name":"ReorderableTreeListViewItem has Material wrapper","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":142,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3286}
{"testID":208,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3295}
{"testID":211,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3297}
{"test":{"id":212,"name":"ReorderableTreeListViewItem has InkWell for tap feedback","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":157,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3298}
{"testID":212,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3308}
{"test":{"id":213,"name":"ReorderableTreeListViewItem preserves node key","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":172,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3308}
{"testID":213,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3319}
{"test":{"id":214,"name":"ReorderableTreeListViewItem responds to tap gestures","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":190,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3319}
{"testID":214,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3341}
{"test":{"id":215,"name":"ReorderableTreeListViewItem integrates with Material theme","suiteID":107,"groupIDs":[177,178],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":210,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_test.dart"},"type":"testStart","time":3341}
{"testID":215,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3353}
{"testID":202,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3454}
{"test":{"id":216,"name":"ReorderableTreeListViewItem Theme Integration should use TreeTheme when provided","suiteID":146,"groupIDs":[200,201],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":29,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"testStart","time":3454}
{"testID":193,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3467}
{"test":{"id":217,"name":"ReorderableTreeListView Keyboard Navigation Focus Management should maintain focus during tree updates","suiteID":136,"groupIDs":[190,191,192],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":59,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3467}
{"testID":216,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3468}
{"test":{"id":218,"name":"ReorderableTreeListViewItem Theme Integration should show connector lines when enabled","suiteID":146,"groupIDs":[200,201],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":68,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"testStart","time":3468}
{"testID":218,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3478}
{"test":{"id":219,"name":"ReorderableTreeListViewItem Theme Integration should hide connector lines when disabled","suiteID":146,"groupIDs":[200,201],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":108,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"testStart","time":3478}
{"testID":219,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3488}
{"test":{"id":220,"name":"ReorderableTreeListViewItem Theme Integration should use Material Design colors when provided","suiteID":146,"groupIDs":[200,201],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":145,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"testStart","time":3488}
{"testID":220,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3498}
{"test":{"id":221,"name":"ReorderableTreeListViewItem Theme Integration should use Material theme colors as fallback","suiteID":146,"groupIDs":[200,201],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":179,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"testStart","time":3498}
{"testID":221,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3507}
{"test":{"id":222,"name":"ReorderableTreeListViewItem Theme Integration should handle zero depth correctly","suiteID":146,"groupIDs":[200,201],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":209,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"testStart","time":3507}
{"testID":222,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3524}
{"test":{"id":223,"name":"ReorderableTreeListViewItem Theme Integration should handle deep nesting correctly","suiteID":146,"groupIDs":[200,201],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":231,"root_column":5,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_item_theme_test.dart"},"type":"testStart","time":3524}
{"testID":223,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3534}
{"testID":217,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3550}
{"group":{"id":224,"suiteID":136,"parentID":191,"name":"ReorderableTreeListView Keyboard Navigation Arrow Navigation","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":84,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"group","time":3550}
{"test":{"id":225,"name":"ReorderableTreeListView Keyboard Navigation Arrow Navigation should navigate down with arrow down","suiteID":136,"groupIDs":[190,191,224],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":85,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3550}
{"testID":225,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3595}
{"test":{"id":226,"name":"ReorderableTreeListView Keyboard Navigation Arrow Navigation should navigate up with arrow up","suiteID":136,"groupIDs":[190,191,224],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":104,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3595}
{"testID":226,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3637}
{"test":{"id":227,"name":"ReorderableTreeListView Keyboard Navigation Arrow Navigation should expand folder with arrow right","suiteID":136,"groupIDs":[190,191,224],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":125,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3637}
{"testID":227,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3665}
{"test":{"id":228,"name":"ReorderableTreeListView Keyboard Navigation Arrow Navigation should collapse folder with arrow left","suiteID":136,"groupIDs":[190,191,224],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":152,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3665}
{"testID":228,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3700}
{"test":{"id":229,"name":"ReorderableTreeListView Keyboard Navigation Arrow Navigation should move to parent with arrow left on leaf","suiteID":136,"groupIDs":[190,191,224],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":170,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3700}
{"testID":229,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3733}
{"group":{"id":230,"suiteID":136,"parentID":191,"name":"ReorderableTreeListView Keyboard Navigation Home/End Navigation","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":192,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"group","time":3734}
{"test":{"id":231,"name":"ReorderableTreeListView Keyboard Navigation Home/End Navigation should jump to first item with Home","suiteID":136,"groupIDs":[190,191,230],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":193,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3734}
{"testID":231,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3765}
{"test":{"id":232,"name":"ReorderableTreeListView Keyboard Navigation Home/End Navigation should jump to last item with End","suiteID":136,"groupIDs":[190,191,230],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":216,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3765}
{"testID":232,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3792}
{"group":{"id":233,"suiteID":136,"parentID":191,"name":"ReorderableTreeListView Keyboard Navigation Item Activation","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":236,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"group","time":3792}
{"test":{"id":234,"name":"ReorderableTreeListView Keyboard Navigation Item Activation should activate item with Enter","suiteID":136,"groupIDs":[190,191,233],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":237,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3792}
{"testID":234,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3815}
{"test":{"id":235,"name":"ReorderableTreeListView Keyboard Navigation Item Activation should activate item with Space","suiteID":136,"groupIDs":[190,191,233],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":259,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3816}
{"testID":235,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3837}
{"group":{"id":236,"suiteID":136,"parentID":191,"name":"ReorderableTreeListView Keyboard Navigation Selection","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":282,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"group","time":3838}
{"test":{"id":237,"name":"ReorderableTreeListView Keyboard Navigation Selection should select item in single selection mode","suiteID":136,"groupIDs":[190,191,236],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":283,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3838}
{"testID":237,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3865}
{"test":{"id":238,"name":"ReorderableTreeListView Keyboard Navigation Selection should handle multiple selection with Ctrl+Space","suiteID":136,"groupIDs":[190,191,236],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":306,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3865}
{"testID":238,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3900}
{"test":{"id":239,"name":"ReorderableTreeListView Keyboard Navigation Selection should handle range selection with Shift+Arrow","suiteID":136,"groupIDs":[190,191,236],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":342,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3901}
{"testID":239,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3935}
{"group":{"id":240,"suiteID":136,"parentID":191,"name":"ReorderableTreeListView Keyboard Navigation Accessibility","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":376,"column":5,"url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"group","time":3936}
{"test":{"id":241,"name":"ReorderableTreeListView Keyboard Navigation Accessibility should disable keyboard navigation when flag is false","suiteID":136,"groupIDs":[190,191,240],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":377,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3936}
{"testID":241,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3958}
{"test":{"id":242,"name":"ReorderableTreeListView Keyboard Navigation Accessibility should announce tree structure with Semantics","suiteID":136,"groupIDs":[190,191,240],"metadata":{"skip":false,"skipReason":null},"line":175,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":400,"root_column":7,"root_url":"file:///Users/wballard/github/reorderable_tree_list_view/test/widgets/reorderable_tree_list_view_keyboard_test.dart"},"type":"testStart","time":3959}
{"testID":242,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3974}
{"success":false,"type":"done","time":3981}
